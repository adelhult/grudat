const operations = [
  {
    "code": 95,
    "shortHand": "ADCA   #Data",
    "method": "im",
    "bytes": 2,
    "cycles": 4,
    "type": "ADCA",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "A + Data + C → A"
  },
  {
    "code": "A5",
    "shortHand": "ADCA   Adr",
    "method": "ab",
    "bytes": 2,
    "cycles": 5,
    "type": "ADCA",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "A + M(Adr) + C → A"
  },
  {
    "code": "B5",
    "shortHand": "ADCA   n, SP",
    "method": "ns",
    "bytes": 2,
    "cycles": 5,
    "type": "ADCA",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "A + M(n+SP) + C → A"
  },
  {
    "code": "C5",
    "shortHand": "ADCA   n, X",
    "method": "nx",
    "bytes": 2,
    "cycles": 5,
    "type": "ADCA",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "A + M(n+X) + C → A"
  },
  {
    "code": "D5",
    "shortHand": "ADCA   n, Y",
    "method": "ny",
    "bytes": 2,
    "cycles": 5,
    "type": "ADCA",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "A + M(n+Y) + C → A"
  },
  {
    "code": 96,
    "shortHand": "ADDA   #Data",
    "method": "im",
    "bytes": 2,
    "cycles": 4,
    "type": "ADDA",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "A + Data → A"
  },
  {
    "code": "A6",
    "shortHand": "ADDA   Adr",
    "method": "ab",
    "bytes": 2,
    "cycles": 5,
    "type": "ADDA",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "A + M(Adr) → A"
  },
  {
    "code": "B6",
    "shortHand": "ADDA   n, SP",
    "method": "ns",
    "bytes": 2,
    "cycles": 5,
    "type": "ADDA",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "A + M(n+SP) → A"
  },
  {
    "code": "C6",
    "shortHand": "ADDA   n, X",
    "method": "nx",
    "bytes": 2,
    "cycles": 5,
    "type": "ADDA",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "A + M(n+X) → A"
  },
  {
    "code": "D6",
    "shortHand": "ADDA   n, Y",
    "method": "ny",
    "bytes": 2,
    "cycles": 5,
    "type": "ADDA",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "A + M(n+Y) → A"
  },
  {
    "code": 99,
    "shortHand": "ANDA   #Data",
    "method": "im",
    "bytes": 2,
    "cycles": 4,
    "type": "ANDA",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "A && Data → A"
  },
  {
    "code": "A9",
    "shortHand": "ANDA   Adr",
    "method": "ab",
    "bytes": 2,
    "cycles": 5,
    "type": "ANDA",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "A && M(Adr) → A"
  },
  {
    "code": "B9",
    "shortHand": "ANDA   n, SP",
    "method": "ns",
    "bytes": 2,
    "cycles": 5,
    "type": "ANDA",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "A && M(n+SP) → A"
  },
  {
    "code": "C9",
    "shortHand": "ANDA   n, X",
    "method": "nx",
    "bytes": 2,
    "cycles": 5,
    "type": "ANDA",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "A && M(n+X) → A"
  },
  {
    "code": "D9",
    "shortHand": "ANDA   n,Y",
    "method": "ny",
    "bytes": 2,
    "cycles": 5,
    "type": "ANDA",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "A && M(n+Y) → A"
  },
  {
    "code": 1,
    "shortHand": "ANDCC   #Data",
    "method": "im",
    "bytes": 2,
    "cycles": 4,
    "type": "ANDCC",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "CC && Data → CC"
  },
  {
    "code": "0B",
    "shortHand": "ASLA",
    "method": "in",
    "bytes": 1,
    "cycles": 3,
    "type": "ASL",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "A<<1 → A"
  },
  {
    "code": "3B",
    "shortHand": "ASL   Adr",
    "method": "ab",
    "bytes": 2,
    "cycles": 4,
    "type": "ASL",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "M(Adr)<<1 → M(Adr)"
  },
  {
    "code": "4B",
    "shortHand": "ASL   n, SP",
    "method": "ns",
    "bytes": 2,
    "cycles": 4,
    "type": "ASL",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "M(n+SP)<<1 → M(n+SP)"
  },
  {
    "code": "5B",
    "shortHand": "ASL   n, X",
    "method": "nx",
    "bytes": 2,
    "cycles": 4,
    "type": "ASL",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "M(n+X)<<1 → M(n+X)"
  },
  {
    "code": "6B",
    "shortHand": "ASL   A, X",
    "method": "ax",
    "bytes": 1,
    "cycles": 4,
    "type": "ASL",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "M(A+X)<<1 → M(A+X)"
  },
  {
    "code": "7B",
    "shortHand": "ASL   n, Y",
    "method": "ny",
    "bytes": 2,
    "cycles": 4,
    "type": "ASL",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "M(n+Y)<<1 → M(n+Y)"
  },
  {
    "code": "8B",
    "shortHand": "ASL   A, Y",
    "method": "ay",
    "bytes": 1,
    "cycles": 4,
    "type": "ASL",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "M(A+Y)<<1 → M(A+Y)"
  },
  {
    "code": "0F",
    "shortHand": "ASRA",
    "method": "in",
    "bytes": 1,
    "cycles": 3,
    "type": "ASR",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "d",
    "RTN": "A>>1 → A"
  },
  {
    "code": "3F",
    "shortHand": "ASR   Adr",
    "method": "ab",
    "bytes": 2,
    "cycles": 4,
    "type": "ASR",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "d",
    "RTN": "M(Adr)>>1 → M(Adr)"
  },
  {
    "code": "4F",
    "shortHand": "ASR   n,SP",
    "method": "ns",
    "bytes": 2,
    "cycles": 4,
    "type": "ASR",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "d",
    "RTN": "M(n+SP)>>1→M(n+SP)"
  },
  {
    "code": "5F",
    "shortHand": "ASR   n,X",
    "method": "nx",
    "bytes": 2,
    "cycles": 4,
    "type": "ASR",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "d",
    "RTN": "M(n+X)>>1 → M(n+X)"
  },
  {
    "code": "6F",
    "shortHand": "ASR   A, X",
    "method": "ax",
    "bytes": 1,
    "cycles": 4,
    "type": "ASR",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "d",
    "RTN": "M(A+X)>>1 → M(A+X)"
  },
  {
    "code": "7F",
    "shortHand": "ASR   n,Y",
    "method": "ny",
    "bytes": 2,
    "cycles": 4,
    "type": "ASR",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "d",
    "RTN": "M(n+Y)>>1 → M(n+Y)"
  },
  {
    "code": "8F",
    "shortHand": "ASR   A,Y",
    "method": "ay",
    "bytes": 1,
    "cycles": 4,
    "type": "ASR",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "d",
    "RTN": "M(A+Y)>>1 → M(A+Y)"
  },
  {
    "code": 29,
    "shortHand": "BCC   Adr",
    "method": "pc",
    "bytes": 2,
    "cycles": 4,
    "type": "BCC",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "If C=0: PC+Offset → PC"
  },
  {
    "code": 28,
    "shortHand": "BCS   Adr",
    "method": "pc",
    "bytes": 2,
    "cycles": 4,
    "type": "BCS",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "If (C = 1): PC+Offset → PC"
  },
  {
    "code": 24,
    "shortHand": "BEQ   Adr",
    "method": "pc",
    "bytes": 2,
    "cycles": 4,
    "type": "BEQ",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "If (Z = 1): PC+Offset → PC"
  },
  {
    "code": "2D",
    "shortHand": "BGE   Adr",
    "method": "pc",
    "bytes": 2,
    "cycles": 4,
    "type": "BGE",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "If ((N xor V) = 0): PC+Offset → PC"
  },
  {
    "code": "2C",
    "shortHand": "BGT   Adr",
    "method": "pc",
    "bytes": 2,
    "cycles": 4,
    "type": "BGT",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "If ((N xor V) + Z = 0): PC+Offset → PC"
  },
  {
    "code": "2A",
    "shortHand": "BHI   Adr",
    "method": "pc",
    "bytes": 2,
    "cycles": 4,
    "type": "BHI",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "If (C+Z = 0): PC+Offset → PC"
  },
  {
    "code": 29,
    "shortHand": "BHS   Adr",
    "method": "pc",
    "bytes": 2,
    "cycles": 4,
    "type": "BHS",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "If (C=0): PC+Offset → PC"
  },
  {
    "code": 98,
    "shortHand": "BITA   #Data",
    "method": "im",
    "bytes": 2,
    "cycles": 3,
    "type": "BITA",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "A && Data"
  },
  {
    "code": "A8",
    "shortHand": "BITA   Adr",
    "method": "ab",
    "bytes": 2,
    "cycles": 4,
    "type": "BITA",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "A && M(Adr)"
  },
  {
    "code": "B8",
    "shortHand": "BITA   n,SP",
    "method": "ns",
    "bytes": 2,
    "cycles": 4,
    "type": "BITA",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "A && M(n+SP)"
  },
  {
    "code": "C8",
    "shortHand": "BITA   n,X",
    "method": "nx",
    "bytes": 2,
    "cycles": 4,
    "type": "BITA",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "A && M(n+X)"
  },
  {
    "code": "D8",
    "shortHand": "BITA   n,Y",
    "method": "ny",
    "bytes": 2,
    "cycles": 4,
    "type": "BITA",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "A && M(n+Y)"
  },
  {
    "code": "2E",
    "shortHand": "BLE   Adr",
    "method": "pc",
    "bytes": 2,
    "cycles": 4,
    "type": "BLE",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "If ((N xor V) + Z = 1): PC+Offset → PC"
  },
  {
    "code": 28,
    "shortHand": "BLO   Adr",
    "method": "pc",
    "bytes": 2,
    "cycles": 4,
    "type": "BLO",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "If (C = 1): PC+Offset → PC"
  },
  {
    "code": "2B",
    "shortHand": "BLS   Adr",
    "method": "pc",
    "bytes": 2,
    "cycles": 4,
    "type": "BLS",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "If (C+Z = 1): PC+Offset → PC"
  },
  {
    "code": "2F",
    "shortHand": "BLT   Adr",
    "method": "pc",
    "bytes": 2,
    "cycles": 4,
    "type": "BLT",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "If ((N xor V) = 1): PC+Offset → PC"
  },
  {
    "code": 22,
    "shortHand": "BMI   Adr",
    "method": "pc",
    "bytes": 2,
    "cycles": 4,
    "type": "BMI",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "If (N = 1): PC+Offset → PC"
  },
  {
    "code": 25,
    "shortHand": "BNE   Adr",
    "method": "pc",
    "bytes": 2,
    "cycles": 4,
    "type": "BNE",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "If (Z = 0): PC+Offset → PC"
  },
  {
    "code": 23,
    "shortHand": "BPL   Adr",
    "method": "pc",
    "bytes": 2,
    "cycles": 4,
    "type": "BPL",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "If (N = 0): PC+Offset → PC"
  },
  {
    "code": 21,
    "shortHand": "BRA   Adr",
    "method": "pc",
    "bytes": 2,
    "cycles": 4,
    "type": "BRA",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "PC+Offset → PC"
  },
  {
    "code": 20,
    "shortHand": "BSR   Adr",
    "method": "pc",
    "bytes": 2,
    "cycles": 5,
    "type": "BSR",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "SP–1 → SP \n PC → M(SP) \n PC+Offset → PC"
  },
  {
    "code": 27,
    "shortHand": "BVC   Adr",
    "method": "pc",
    "bytes": 2,
    "cycles": 4,
    "type": "BVC",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "If (V = 0): PC+Offset → PC"
  },
  {
    "code": 26,
    "shortHand": "BVS   Adr",
    "method": "pc",
    "bytes": 2,
    "cycles": 4,
    "type": "BVS",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "If (V = 1): PC+Offset → PC"
  },
  {
    "code": 5,
    "shortHand": "CLRA",
    "method": "in",
    "bytes": 1,
    "cycles": 3,
    "type": "CLR",
    "n": 0,
    "z": 1,
    "v": 0,
    "c": 0,
    "RTN": "0 → A"
  },
  {
    "code": 35,
    "shortHand": "CLR   Adr",
    "method": "ab",
    "bytes": 2,
    "cycles": 3,
    "type": "CLR",
    "n": 0,
    "z": 1,
    "v": 0,
    "c": 0,
    "RTN": "0 → M(Adr)"
  },
  {
    "code": 45,
    "shortHand": "CLR   n,SP",
    "method": "ns",
    "bytes": 2,
    "cycles": 3,
    "type": "CLR",
    "n": 0,
    "z": 1,
    "v": 0,
    "c": 0,
    "RTN": "0 → M(n+SP)"
  },
  {
    "code": 55,
    "shortHand": "CLR   n,X",
    "method": "nx",
    "bytes": 2,
    "cycles": 3,
    "type": "CLR",
    "n": 0,
    "z": 1,
    "v": 0,
    "c": 0,
    "RTN": "0 → M(n+X)"
  },
  {
    "code": 65,
    "shortHand": "CLR   A,X",
    "method": "ax",
    "bytes": 1,
    "cycles": 3,
    "type": "CLR",
    "n": 0,
    "z": 1,
    "v": 0,
    "c": 0,
    "RTN": "0 → M(A+X)"
  },
  {
    "code": 75,
    "shortHand": "CLR   n, Y",
    "method": "ny",
    "bytes": 2,
    "cycles": 3,
    "type": "CLR",
    "n": 0,
    "z": 1,
    "v": 0,
    "c": 0,
    "RTN": "0 → M(n+Y)"
  },
  {
    "code": 85,
    "shortHand": "CLR   A, Y",
    "method": "ay",
    "bytes": 1,
    "cycles": 3,
    "type": "CLR",
    "n": 0,
    "z": 1,
    "v": 0,
    "c": 0,
    "RTN": "0 → M(A+Y)"
  },
  {
    "code": 97,
    "shortHand": "CMPA   #Data",
    "method": "im",
    "bytes": 2,
    "cycles": 3,
    "type": "CMP",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "A – Data"
  },
  {
    "code": "A7",
    "shortHand": "CMPA   Adr",
    "method": "ab",
    "bytes": 2,
    "cycles": 4,
    "type": "CMP",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "A – M(Adr)"
  },
  {
    "code": "B7",
    "shortHand": "CMPA   n, SP",
    "method": "ns",
    "bytes": 2,
    "cycles": 4,
    "type": "CMP",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "A – M(n+SP)"
  },
  {
    "code": "C7",
    "shortHand": "CMPA   n, X",
    "method": "nx",
    "bytes": 2,
    "cycles": 4,
    "type": "CMP",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "A – M(n+X)"
  },
  {
    "code": "D7",
    "shortHand": "CMPA   n, Y",
    "method": "ny",
    "bytes": 2,
    "cycles": 4,
    "type": "CMP",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "A – M(n+Y)"
  },
  {
    "code": "9C",
    "shortHand": "CMPX   #Data",
    "method": "im",
    "bytes": 2,
    "cycles": 3,
    "type": "CMP",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "X – Data"
  },
  {
    "code": "AC",
    "shortHand": "CMPX   Adr",
    "method": "ab",
    "bytes": 2,
    "cycles": 4,
    "type": "CMP",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "X – M(Adr)"
  },
  {
    "code": "BC",
    "shortHand": "CMPX   n, SP",
    "method": "ns",
    "bytes": 2,
    "cycles": 4,
    "type": "CMP",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "X – M(n+SP)"
  },
  {
    "code": "9D",
    "shortHand": "CMPY   #Data",
    "method": "im",
    "bytes": 2,
    "cycles": 3,
    "type": "CMP",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "Y – Data"
  },
  {
    "code": "AD",
    "shortHand": "CMPY   Adr",
    "method": "ab",
    "bytes": 2,
    "cycles": 4,
    "type": "CMP",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "Y – M(Adr)"
  },
  {
    "code": "BD",
    "shortHand": "CMPY   n, SP",
    "method": "ns",
    "bytes": 2,
    "cycles": 4,
    "type": "CMP",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "Y – M(n+SP)"
  },
  {
    "code": "9E",
    "shortHand": "CMPSP   #Data",
    "method": "im",
    "bytes": 2,
    "cycles": 3,
    "type": "CMP",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "SP – Data"
  },
  {
    "code": "AE",
    "shortHand": "CMPSP   Adr",
    "method": "ab",
    "bytes": 2,
    "cycles": 4,
    "type": "CMP",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "SP – M(Adr)"
  },
  {
    "code": "0A",
    "shortHand": "COMA",
    "method": "in",
    "bytes": 1,
    "cycles": 3,
    "type": "COM",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "A' → A"
  },
  {
    "code": "3A",
    "shortHand": "COM   ADR",
    "method": "ab",
    "bytes": 2,
    "cycles": 4,
    "type": "COM",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "M(Adr) ' → M(Adr)"
  },
  {
    "code": "4A",
    "shortHand": "COM   n,SP",
    "method": "ns",
    "bytes": 2,
    "cycles": 4,
    "type": "COM",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "M(n+SP) ' → M(n+SP)"
  },
  {
    "code": "5A",
    "shortHand": "COM   n,X",
    "method": "nx",
    "bytes": 2,
    "cycles": 4,
    "type": "COM",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "M(n+X) ' → M(n+X)"
  },
  {
    "code": "6A",
    "shortHand": "COM   A,X",
    "method": "ax",
    "bytes": 1,
    "cycles": 4,
    "type": "COM",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "M(A+X) ' → M(A+X)"
  },
  {
    "code": "7A",
    "shortHand": "COM   n,Y",
    "method": "ny",
    "bytes": 2,
    "cycles": 4,
    "type": "COM",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "M(n+Y) ' → M(n+Y)"
  },
  {
    "code": "8A",
    "shortHand": "COM   A,Y",
    "method": "ay",
    "bytes": 1,
    "cycles": 4,
    "type": "COM",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "M(A+Y) ' → M(A+Y)"
  },
  {
    "code": 8,
    "shortHand": "DECA",
    "method": "in",
    "bytes": 1,
    "cycles": 3,
    "type": "DEC",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "-",
    "RTN": "A – 1 → A"
  },
  {
    "code": 38,
    "shortHand": "DEC   Adr",
    "method": "ab",
    "bytes": 2,
    "cycles": 4,
    "type": "DEC",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "-",
    "RTN": "M(Adr) – 1 → M(Adr)"
  },
  {
    "code": 48,
    "shortHand": "DEC   n,SP",
    "method": "ns",
    "bytes": 2,
    "cycles": 4,
    "type": "DEC",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "-",
    "RTN": "M(n+SP) – 1 → M(n+SP)"
  },
  {
    "code": 58,
    "shortHand": "DEC   n,X",
    "method": "nx",
    "bytes": 2,
    "cycles": 4,
    "type": "DEC",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "-",
    "RTN": "M(n+X) – 1 → M(n+X)"
  },
  {
    "code": 68,
    "shortHand": "DEC   A,X",
    "method": "ax",
    "bytes": 1,
    "cycles": 4,
    "type": "DEC",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "-",
    "RTN": "M(A+X) –1 → M(A+X)"
  },
  {
    "code": 78,
    "shortHand": "DEC   n,Y",
    "method": "ny",
    "bytes": 2,
    "cycles": 4,
    "type": "DEC",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "-",
    "RTN": "M(n+Y) –1 → M(n+Y)"
  },
  {
    "code": 88,
    "shortHand": "DEC   A,Y",
    "method": "ay",
    "bytes": 1,
    "cycles": 4,
    "type": "DEC",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "-",
    "RTN": "M(A+Y) –1 → M(A+Y)"
  },
  {
    "code": "9B",
    "shortHand": "EORA   #Data",
    "method": "im",
    "bytes": 2,
    "cycles": 4,
    "type": "EOR",
    "n": "d",
    "z": "d",
    "v": "0",
    "c": "-",
    "RTN": "A xor Data → A"
  },
  {
    "code": "AB",
    "shortHand": "EORA   Adr",
    "method": "ab",
    "bytes": 2,
    "cycles": 5,
    "type": "EOR",
    "n": "d",
    "z": "d",
    "v": "0",
    "c": "-",
    "RTN": "A xor M(Adr) → A"
  },
  {
    "code": "BB",
    "shortHand": "EORA   n,SP",
    "method": "ns",
    "bytes": 2,
    "cycles": 5,
    "type": "EOR",
    "n": "d",
    "z": "d",
    "v": "0",
    "c": "-",
    "RTN": "A xor M(n+SP) → A"
  },
  {
    "code": "CB",
    "shortHand": "EORA   n,X",
    "method": "nx",
    "bytes": 2,
    "cycles": 5,
    "type": "EOR",
    "n": "d",
    "z": "d",
    "v": "0",
    "c": "-",
    "RTN": "A xor M(n+X) → A"
  },
  {
    "code": "DB",
    "shortHand": "EORA   n,Y",
    "method": "nx",
    "bytes": 2,
    "cycles": 5,
    "type": "EOR",
    "n": "d",
    "z": "d",
    "v": "0",
    "c": "-",
    "RTN": "A xor M(n+Y) → A"
  },
  {
    "code": "9F",
    "shortHand": "EXG   A, CC",
    "method": "in",
    "bytes": 1,
    "cycles": 4,
    "type": "EXG",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "A <-> CC"
  },
  {
    "code": "AF",
    "shortHand": "EXG   X, Y",
    "method": "in",
    "bytes": 1,
    "cycles": 4,
    "type": "EXG",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "X <-> Y"
  },
  {
    "code": "BF",
    "shortHand": "EXG   X, SP",
    "method": "in",
    "bytes": 1,
    "cycles": 4,
    "type": "EXG",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "X <-> SP"
  },
  {
    "code": "CF",
    "shortHand": "EXG   Y, SP",
    "method": "in",
    "bytes": 1,
    "cycles": 4,
    "type": "EXG",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "Y <-> SP"
  },
  {
    "code": 7,
    "shortHand": "INCA",
    "method": "in",
    "bytes": 1,
    "cycles": 3,
    "type": "INC",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "-",
    "RTN": "A + 1 → A"
  },
  {
    "code": 37,
    "shortHand": "INC   Adr",
    "method": "ab",
    "bytes": 2,
    "cycles": 4,
    "type": "INC",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "-",
    "RTN": "M(Adr) + 1 → M(Adr)"
  },
  {
    "code": 47,
    "shortHand": "INC   n,SP",
    "method": "ns",
    "bytes": 2,
    "cycles": 4,
    "type": "INC",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "-",
    "RTN": "M(n+SP) + 1 → M(n+SP)"
  },
  {
    "code": 57,
    "shortHand": "INC   n,X",
    "method": "nx",
    "bytes": 2,
    "cycles": 4,
    "type": "INC",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "-",
    "RTN": "M(n+X) + 1 → M(n+X)"
  },
  {
    "code": 67,
    "shortHand": "INC   A,X",
    "method": "ax",
    "bytes": 1,
    "cycles": 4,
    "type": "INC",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "-",
    "RTN": "M(A+X) + 1 → M(A+X)"
  },
  {
    "code": 77,
    "shortHand": "INC   n,Y",
    "method": "ny",
    "bytes": 2,
    "cycles": 4,
    "type": "INC",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "-",
    "RTN": "M(n+Y) + 1 → M(n+Y)"
  },
  {
    "code": 87,
    "shortHand": "INC   A,Y",
    "method": "ay",
    "bytes": 1,
    "cycles": 4,
    "type": "INC",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "-",
    "RTN": "M(A+Y) + 1 → M(A+Y)"
  },
  {
    "code": 33,
    "shortHand": "JMP   Adr",
    "method": "ab",
    "bytes": 2,
    "cycles": 2,
    "type": "JMP",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "Adr → PC"
  },
  {
    "code": 53,
    "shortHand": "JMP   n,X",
    "method": "nx",
    "bytes": 2,
    "cycles": 4,
    "type": "JMP",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "n+X → PC"
  },
  {
    "code": 63,
    "shortHand": "JMP   A,X",
    "method": "ax",
    "bytes": 1,
    "cycles": 4,
    "type": "JMP",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "A+X → PC"
  },
  {
    "code": 73,
    "shortHand": "JMP   n,Y",
    "method": "ny",
    "bytes": 2,
    "cycles": 4,
    "type": "JMP",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "n+Y → PC"
  },
  {
    "code": 83,
    "shortHand": "JMP   A,Y",
    "method": "ay",
    "bytes": 1,
    "cycles": 4,
    "type": "JMP",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "A+Y → PC"
  },
  {
    "code": 34,
    "shortHand": "JSR   Adr",
    "method": "ab",
    "bytes": 2,
    "cycles": 4,
    "type": "JSR",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "SP–1 → SP \n PC → M(SP) \n Adr → PC"
  },
  {
    "code": 54,
    "shortHand": "JSR   n,X",
    "method": "nx",
    "bytes": 2,
    "cycles": 5,
    "type": "JSR",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "SP–1 → SP \n PC → M(SP) \n n+X → PC"
  },
  {
    "code": 64,
    "shortHand": "JSR   A,X",
    "method": "ax",
    "bytes": 1,
    "cycles": 5,
    "type": "JSR",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "SP–1 → SP \n PC → M(SP) \n A+X → PC"
  },
  {
    "code": 74,
    "shortHand": "JSR   n,Y",
    "method": "ny",
    "bytes": 2,
    "cycles": 5,
    "type": "JSR",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "SP–1 → SP\n PC → M(SP) \n n+X → PC"
  },
  {
    "code": 84,
    "shortHand": "JSR  AY",
    "method": "ay",
    "bytes": 1,
    "cycles": 5,
    "type": "JSR",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "SP–1 → SP \n PC → M(SP) \n A+X → PC"
  },
  {
    "code": "F0",
    "shortHand": "LDA   #Data",
    "method": "im",
    "bytes": 2,
    "cycles": 2,
    "type": "LD",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "Data → A"
  },
  {
    "code": "F1",
    "shortHand": "LDA   Adr",
    "method": "ab",
    "bytes": 2,
    "cycles": 3,
    "type": "LD",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "M(Adr) → A"
  },
  {
    "code": "F2",
    "shortHand": "LDA   n,SP",
    "method": "ns",
    "bytes": 2,
    "cycles": 3,
    "type": "LD",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "M(n+SP) → A"
  },
  {
    "code": "F3",
    "shortHand": "LDA   n,X",
    "method": "nx",
    "bytes": 2,
    "cycles": 3,
    "type": "LD",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "M(n+X) → A"
  },
  {
    "code": "F4",
    "shortHand": "LDA   A,X",
    "method": "ax",
    "bytes": 1,
    "cycles": 3,
    "type": "LD",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "M(A+X) → A"
  },
  {
    "code": "F5",
    "shortHand": "LDA   ,X+",
    "method": "x+",
    "bytes": 1,
    "cycles": 4,
    "type": "LD",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "M(X) → A, X+1 → X"
  },
  {
    "code": "F6",
    "shortHand": "LDA   ,X-",
    "method": "x-",
    "bytes": 1,
    "cycles": 4,
    "type": "LD",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "M(X) → A, X-1 → X"
  },
  {
    "code": "F7",
    "shortHand": "LDA   ,+X",
    "method": "-x",
    "bytes": 1,
    "cycles": 4,
    "type": "LD",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "X+1 → X, M(X) → A"
  },
  {
    "code": "F8",
    "shortHand": "LDA   ,-X",
    "method": "-x",
    "bytes": 1,
    "cycles": 4,
    "type": "LD",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "X–1 → X, M(X) → A"
  },
  {
    "code": "F9",
    "shortHand": "LDA   n,Y",
    "method": "ny",
    "bytes": 2,
    "cycles": 3,
    "type": "LD",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "M(n+Y) → A"
  },
  {
    "code": "FA",
    "shortHand": "LDA   A,Y",
    "method": "ay",
    "bytes": 1,
    "cycles": 3,
    "type": "LD",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "M(A+Y) → A"
  },
  {
    "code": "FB",
    "shortHand": "LDA   ,Y+",
    "method": "y+",
    "bytes": 1,
    "cycles": 4,
    "type": "LD",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "M(Y) → A, Y+1 → Y"
  },
  {
    "code": "FC",
    "shortHand": "LDA   ,Y-",
    "method": "y-",
    "bytes": 1,
    "cycles": 4,
    "type": "LD",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "M(Y) → A, Y-1 → Y"
  },
  {
    "code": "FD",
    "shortHand": "LDA   ,+Y",
    "method": "-y",
    "bytes": 1,
    "cycles": 4,
    "type": "LD",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "Y+1 → Y, M(Y) → A"
  },
  {
    "code": "FE",
    "shortHand": "LDA   ,-Y",
    "method": "-y",
    "bytes": 1,
    "cycles": 4,
    "type": "LD",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "Y–1 → Y, M(Y) → A"
  },
  {
    "code": 90,
    "shortHand": "LDX   #Data",
    "method": "im",
    "bytes": 2,
    "cycles": 2,
    "type": "LD",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "Data→ X"
  },
  {
    "code": "A0",
    "shortHand": "LDX   Adr",
    "method": "ab",
    "bytes": 2,
    "cycles": 3,
    "type": "LD",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "M(Adr) → X"
  },
  {
    "code": "B0",
    "shortHand": "LDX   n,SP",
    "method": "ns",
    "bytes": 2,
    "cycles": 3,
    "type": "LD",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "M(n+SP) → X"
  },
  {
    "code": "C0",
    "shortHand": "LDX   n,X",
    "method": "nx",
    "bytes": 2,
    "cycles": 3,
    "type": "LD",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "M(n+X) → X"
  },
  {
    "code": "D0",
    "shortHand": "LDX   n,Y",
    "method": "ny",
    "bytes": 2,
    "cycles": 3,
    "type": "LD",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "M(n+Y) → X"
  },
  {
    "code": 91,
    "shortHand": "LDY   #Data",
    "method": "im",
    "bytes": 2,
    "cycles": 2,
    "type": "LD",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "Data→ Y"
  },
  {
    "code": "A1",
    "shortHand": "LDY   Adr",
    "method": "ab",
    "bytes": 2,
    "cycles": 3,
    "type": "LD",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "M(Adr) → Y"
  },
  {
    "code": "B1",
    "shortHand": "LDY   n,SP",
    "method": "ns",
    "bytes": 2,
    "cycles": 3,
    "type": "LD",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "M(n+SP) → Y"
  },
  {
    "code": "C1",
    "shortHand": "LDY   n,X",
    "method": "nx",
    "bytes": 2,
    "cycles": 3,
    "type": "LD",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "M(n+X) → Y"
  },
  {
    "code": "D1",
    "shortHand": "LDY   n,Y",
    "method": "ny",
    "bytes": 2,
    "cycles": 3,
    "type": "LD",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "M(n+Y) → Y"
  },
  {
    "code": 92,
    "shortHand": "LDSP   #Data",
    "method": "im",
    "bytes": 2,
    "cycles": 2,
    "type": "LD",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "Data → SP"
  },
  {
    "code": "A2",
    "shortHand": "LDSP   Adr",
    "method": "ab",
    "bytes": 2,
    "cycles": 3,
    "type": "LD",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "M(Adr) → SP"
  },
  {
    "code": "B2",
    "shortHand": "LDSP   n,SP",
    "method": "ns",
    "bytes": 2,
    "cycles": 3,
    "type": "LD",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "M(n+SP) → SP"
  },
  {
    "code": "C2",
    "shortHand": "LDSP   n,X",
    "method": "nx",
    "bytes": 2,
    "cycles": 3,
    "type": "LD",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "M(n+X) → SP"
  },
  {
    "code": "D2",
    "shortHand": "LDSP   n,Y",
    "method": "ny",
    "bytes": 2,
    "cycles": 3,
    "type": "LD",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "M(n+Y) → SP"
  },
  {
    "code": "CC",
    "shortHand": "LEAX   n,X",
    "method": "nx",
    "bytes": 2,
    "cycles": 4,
    "type": "LEA",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "X + n → X"
  },
  {
    "code": "DC",
    "shortHand": "LEAX   n,SP",
    "method": "ns",
    "bytes": 2,
    "cycles": 4,
    "type": "LEA",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "SP + n → X"
  },
  {
    "code": "CD",
    "shortHand": "LEAY   n,Y",
    "method": "ny",
    "bytes": 2,
    "cycles": 4,
    "type": "LEA",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "Y + n → Y"
  },
  {
    "code": "DD",
    "shortHand": "LEAY   n,SP",
    "method": "ns",
    "bytes": 2,
    "cycles": 4,
    "type": "LEA",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "SP + n → Y"
  },
  {
    "code": "BE",
    "shortHand": "LEASP   n,SP",
    "method": "ns",
    "bytes": 2,
    "cycles": 4,
    "type": "LEA",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "SP + n → SP"
  },
  {
    "code": "CE",
    "shortHand": "LEASP   n,X",
    "method": "nx",
    "bytes": 2,
    "cycles": 4,
    "type": "LEA",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "X + n → SP"
  },
  {
    "code": "DE",
    "shortHand": "LEASP   n,Y",
    "method": "ny",
    "bytes": 2,
    "cycles": 4,
    "type": "LEA",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "Y + n → SP"
  },
  {
    "code": "0B",
    "shortHand": "LSLA",
    "method": "in",
    "bytes": 1,
    "cycles": 3,
    "type": "LSL",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "A<<1 → A"
  },
  {
    "code": "3B",
    "shortHand": "LSL   Adr",
    "method": "ab",
    "bytes": 2,
    "cycles": 4,
    "type": "LSL",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "M(Adr)<<1 → M(Adr)"
  },
  {
    "code": "4B",
    "shortHand": "LSL   n,SP",
    "method": "ns",
    "bytes": 2,
    "cycles": 4,
    "type": "LSL",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "M(n+SP)<<1 → M(n+SP)"
  },
  {
    "code": "5B",
    "shortHand": "LSL   n,X",
    "method": "nx",
    "bytes": 2,
    "cycles": 4,
    "type": "LSL",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "M(n+X)<<1 → M(n+X)"
  },
  {
    "code": "6B",
    "shortHand": "LSL   A,X",
    "method": "ax",
    "bytes": 1,
    "cycles": 4,
    "type": "LSL",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "M(A+X)<<1 → M(A+X)"
  },
  {
    "code": "7B",
    "shortHand": "LSL   n,Y",
    "method": "ny",
    "bytes": 2,
    "cycles": 4,
    "type": "LSL",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "M(n+Y)<<1 → M(n+Y)"
  },
  {
    "code": "8B",
    "shortHand": "LSL   A,Y",
    "method": "ay",
    "bytes": 1,
    "cycles": 4,
    "type": "LSL",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "M(A+Y)<<1 → M(A+Y)"
  },
  {
    "code": "0C",
    "shortHand": "LSRA",
    "method": "in",
    "bytes": 1,
    "cycles": 3,
    "type": "LSR",
    "n": 0,
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "A>>1 → A"
  },
  {
    "code": "3C",
    "shortHand": "LSR   Adr",
    "method": "ab",
    "bytes": 2,
    "cycles": 4,
    "type": "LSR",
    "n": 0,
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "M(Adr)>>1 → M(Adr)"
  },
  {
    "code": "4C",
    "shortHand": "LSR   n,SP",
    "method": "ns",
    "bytes": 2,
    "cycles": 4,
    "type": "LSR",
    "n": 0,
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "M(n+SP)>>1 → M(n+SP)"
  },
  {
    "code": "5C",
    "shortHand": "LSR   n,X",
    "method": "nx",
    "bytes": 2,
    "cycles": 4,
    "type": "LSR",
    "n": 0,
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "M(n+X)>>1 → M(n+X)"
  },
  {
    "code": "6C",
    "shortHand": "LSR   A,X",
    "method": "ax",
    "bytes": 1,
    "cycles": 4,
    "type": "LSR",
    "n": 0,
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "M(A+X)>>1 → M(A+X)"
  },
  {
    "code": "7C",
    "shortHand": "LSR   n,Y",
    "method": "ny",
    "bytes": 2,
    "cycles": 4,
    "type": "LSR",
    "n": 0,
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "M(n+Y)>>1 → M(n+Y)"
  },
  {
    "code": "8C",
    "shortHand": "LSR   A,Y",
    "method": "ay",
    "bytes": 1,
    "cycles": 4,
    "type": "LSR",
    "n": 0,
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "M(A+Y)>>1 → M(A+Y)"
  },
  {
    "code": 6,
    "shortHand": "NEGA",
    "method": "in",
    "bytes": 1,
    "cycles": 3,
    "type": "NEG",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "– A → A"
  },
  {
    "code": 36,
    "shortHand": "NEG   Adr",
    "method": "ab",
    "bytes": 2,
    "cycles": 4,
    "type": "NEG",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "– M(Adr) → M(Adr)"
  },
  {
    "code": 46,
    "shortHand": "NEG   n,SP",
    "method": "ns",
    "bytes": 2,
    "cycles": 4,
    "type": "NEG",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "– M(n+SP) → M(n+SP)"
  },
  {
    "code": 56,
    "shortHand": "NEG   n,X",
    "method": "nx",
    "bytes": 2,
    "cycles": 4,
    "type": "NEG",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "– M(n+X) → M(n+X)"
  },
  {
    "code": 66,
    "shortHand": "NEG   A,X",
    "method": "ax",
    "bytes": 1,
    "cycles": 4,
    "type": "NEG",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "– M(A+X) → M(A+X)"
  },
  {
    "code": 76,
    "shortHand": "NEG   n,Y",
    "method": "ny",
    "bytes": 2,
    "cycles": 4,
    "type": "NEG",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "– M(n+Y) → M(n+Y)"
  },
  {
    "code": 86,
    "shortHand": "NEG   A,Y",
    "method": "ay",
    "bytes": 1,
    "cycles": 4,
    "type": "NEG",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "– M(A+Y) → M(A+Y)"
  },
  {
    "code": 0,
    "shortHand": "NOP",
    "method": "in",
    "bytes": 1,
    "cycles": 2,
    "type": "NOP",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "No operation"
  },
  {
    "code": "9A",
    "shortHand": "ORA   #Data",
    "method": "im",
    "bytes": 2,
    "cycles": 4,
    "type": "ORA",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "A or Data → A"
  },
  {
    "code": "AA",
    "shortHand": "ORA   Adr",
    "method": "ab",
    "bytes": 2,
    "cycles": 5,
    "type": "ORA",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "A or M(Adr) → A"
  },
  {
    "code": "BA",
    "shortHand": "ORA   n,SP",
    "method": "ns",
    "bytes": 2,
    "cycles": 5,
    "type": "ORA",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "A or M(n+SP) → A"
  },
  {
    "code": "CA",
    "shortHand": "ORA   n,X",
    "method": "nx",
    "bytes": 2,
    "cycles": 5,
    "type": "ORA",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "A or M(n+X) → A"
  },
  {
    "code": "DA",
    "shortHand": "ORA   n,Y",
    "method": "ny",
    "bytes": 2,
    "cycles": 5,
    "type": "ORA",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": "-",
    "RTN": "A or M(n+Y) → A"
  },
  {
    "code": 2,
    "shortHand": "ORCC   #Data",
    "method": "im",
    "bytes": 2,
    "cycles": 4,
    "type": "ORCC",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "CC or Data → CC"
  },
  {
    "code": 10,
    "shortHand": "PSHA",
    "method": "in",
    "bytes": 1,
    "cycles": 3,
    "type": "PSH",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "SP–1 → SP \n A → M(SP)"
  },
  {
    "code": 11,
    "shortHand": "PSHX",
    "method": "in",
    "bytes": 1,
    "cycles": 3,
    "type": "PSH",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "SP–1 → SP \n X → M(SP)"
  },
  {
    "code": 12,
    "shortHand": "PSHY",
    "method": "in",
    "bytes": 1,
    "cycles": 3,
    "type": "PSH",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "SP–1 → SP \n Y → M(SP)"
  },
  {
    "code": 13,
    "shortHand": "PSHC",
    "method": "in",
    "bytes": 1,
    "cycles": 3,
    "type": "PSH",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "SP–1 → SP \n CC → M(SP)"
  },
  {
    "code": 14,
    "shortHand": "PULA",
    "method": "in",
    "bytes": 1,
    "cycles": 3,
    "type": "PUL",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "M(SP) → A \n SP+1 → SP"
  },
  {
    "code": 15,
    "shortHand": "PULX",
    "method": "in",
    "bytes": 1,
    "cycles": 3,
    "type": "PUL",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "M(SP) → X \n SP+1 → SP"
  },
  {
    "code": 16,
    "shortHand": "PULY",
    "method": "in",
    "bytes": 1,
    "cycles": 3,
    "type": "PUL",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "M(SP) → Y \n SP+1 → SP"
  },
  {
    "code": 17,
    "shortHand": "PULCC",
    "method": "in",
    "bytes": 1,
    "cycles": 3,
    "type": "PUL",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "M(SP) → CC \n SP+1 → SP"
  },
  {
    "code": "0D",
    "shortHand": "ROLA",
    "method": "in",
    "bytes": 1,
    "cycles": 3,
    "type": "ROL",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "A<<1 → A"
  },
  {
    "code": "3D",
    "shortHand": "ROL   Adr",
    "method": "ab",
    "bytes": 2,
    "cycles": 4,
    "type": "ROL",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "M(Adr)<<1 → M(Adr)"
  },
  {
    "code": "4D",
    "shortHand": "ROL   n,SP",
    "method": "ns",
    "bytes": 2,
    "cycles": 4,
    "type": "ROL",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "M(n+SP)<<1 → M(n+SP)"
  },
  {
    "code": "5D",
    "shortHand": "ROL   n,X",
    "method": "nx",
    "bytes": 2,
    "cycles": 4,
    "type": "ROL",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "M(n+X)<<1 → M(n+X)"
  },
  {
    "code": "6D",
    "shortHand": "ROL   A,X",
    "method": "ax",
    "bytes": 1,
    "cycles": 4,
    "type": "ROL",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "M(A+X)<<1 → M(A+X)"
  },
  {
    "code": "7D",
    "shortHand": "ROL   n,Y",
    "method": "ny",
    "bytes": 2,
    "cycles": 4,
    "type": "ROL",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "M(n+Y)<<1 → M(n+Y)"
  },
  {
    "code": "8D",
    "shortHand": "ROL   A,Y",
    "method": "ay",
    "bytes": 1,
    "cycles": 4,
    "type": "ROL",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "M(A+Y)<<1 → M(A+Y)"
  },
  {
    "code": "0E",
    "shortHand": "RORA",
    "method": "in",
    "bytes": 1,
    "cycles": 3,
    "type": "ROR",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "A>>1 → A"
  },
  {
    "code": "3E",
    "shortHand": "ROR   Adr",
    "method": "ab",
    "bytes": 2,
    "cycles": 4,
    "type": "ROR",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "M(Adr)>>1 → M(Adr)"
  },
  {
    "code": "4E",
    "shortHand": "ROR   n,SP",
    "method": "ns",
    "bytes": 2,
    "cycles": 4,
    "type": "ROR",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "M(n+SP)>>1 → M(n+SP)"
  },
  {
    "code": "5E",
    "shortHand": "ROR   n,X",
    "method": "nx",
    "bytes": 2,
    "cycles": 4,
    "type": "ROR",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "M(n+X)>>1 → M(n+X)"
  },
  {
    "code": "6E",
    "shortHand": "ROR   A,X",
    "method": "ax",
    "bytes": 1,
    "cycles": 4,
    "type": "ROR",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "M(A+X)>>1 → M(A+X)"
  },
  {
    "code": "7E",
    "shortHand": "ROR   n,Y",
    "method": "ax",
    "bytes": 2,
    "cycles": 4,
    "type": "ROR",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "M(n+Y)>>1 → M(n+Y)"
  },
  {
    "code": "8E",
    "shortHand": "ROR   A,Y",
    "method": "ax",
    "bytes": 1,
    "cycles": 4,
    "type": "ROR",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "M(A+Y)>>1 → M(A+Y)"
  },
  {
    "code": 43,
    "shortHand": "RTS",
    "method": "in",
    "bytes": 1,
    "cycles": 2,
    "type": "RTS",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "M(SP) → PC \n SP+1 → SP"
  },
  {
    "code": 44,
    "shortHand": "RTI",
    "method": "in",
    "bytes": 1,
    "cycles": 6,
    "type": "RTI",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "M(SP) → CC,\n SP+1 → SP,\n M(SP) → A,\n SP+1 → SP,\n M(SP) → X,\n SP+1 → SP,\n M(SP) → Y,\n SP+1 → SP,\n M(SP) → PC,\n SP+1 → SP"
  },
  {
    "code": 93,
    "shortHand": "SBCA   #Data",
    "method": "im",
    "bytes": 2,
    "cycles": 4,
    "type": "SBCA",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "A–Data-C → A"
  },
  {
    "code": "A3",
    "shortHand": "SBCA   Adr",
    "method": "ab",
    "bytes": 2,
    "cycles": 5,
    "type": "SBCA",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "A–M(Adr)-C → A"
  },
  {
    "code": "B3",
    "shortHand": "SBCA   n,SP",
    "method": "ns",
    "bytes": 2,
    "cycles": 5,
    "type": "SBCA",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "A – M(n+SP) – C → A"
  },
  {
    "code": "C3",
    "shortHand": "SBCA   n,X",
    "method": "nx",
    "bytes": 2,
    "cycles": 5,
    "type": "SBCA",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "A – M(n+X) – C → A"
  },
  {
    "code": "D3",
    "shortHand": "SBCA   n,Y",
    "method": "ny",
    "bytes": 2,
    "cycles": 5,
    "type": "SBCA",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "A – M(n+Y) – C → A"
  },
  {
    "code": "E1",
    "shortHand": "STA   Adr",
    "method": "ab",
    "bytes": 2,
    "cycles": 3,
    "type": "ST",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "A → M(Adr)"
  },
  {
    "code": "E2",
    "shortHand": "STA   n,SP",
    "method": "ns",
    "bytes": 2,
    "cycles": 3,
    "type": "ST",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "A → M(n+SP)"
  },
  {
    "code": "E3",
    "shortHand": "STA   n,X",
    "method": "nx",
    "bytes": 2,
    "cycles": 3,
    "type": "ST",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "A → M(n+X)"
  },
  {
    "code": "E4",
    "shortHand": "STA   A,X",
    "method": "ax",
    "bytes": 1,
    "cycles": 3,
    "type": "ST",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "A → M(A+X)"
  },
  {
    "code": "E5",
    "shortHand": "STA   ,X+",
    "method": "x+",
    "bytes": 1,
    "cycles": 4,
    "type": "ST",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "A → M(X),\n X+1 → X"
  },
  {
    "code": "E6",
    "shortHand": "STA   ,X-",
    "method": "x-",
    "bytes": 1,
    "cycles": 4,
    "type": "ST",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "A → M(X),\n X–1 → X"
  },
  {
    "code": "E7",
    "shortHand": "STA   ,+X",
    "method": "-x",
    "bytes": 1,
    "cycles": 4,
    "type": "ST",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "X+1 → X,\n A → M(X)"
  },
  {
    "code": "E8",
    "shortHand": "STA   ,-X",
    "method": "-x",
    "bytes": 1,
    "cycles": 4,
    "type": "ST",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "X–1 → X,\n A → M(X)"
  },
  {
    "code": "E9",
    "shortHand": "STA   n,Y",
    "method": "ny",
    "bytes": 2,
    "cycles": 3,
    "type": "ST",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "A → M(n+Y)"
  },
  {
    "code": "EA",
    "shortHand": "STA   A,Y",
    "method": "ay",
    "bytes": 1,
    "cycles": 3,
    "type": "ST",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "A → M(A+Y)"
  },
  {
    "code": "EB",
    "shortHand": "STA   ,Y+",
    "method": "y+",
    "bytes": 1,
    "cycles": 4,
    "type": "ST",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "A → M(Y), Y+1 → Y"
  },
  {
    "code": "EC",
    "shortHand": "STA   ,Y-",
    "method": "y-",
    "bytes": 1,
    "cycles": 4,
    "type": "ST",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "A → M(Y),\n Y–1 → Y"
  },
  {
    "code": "ED",
    "shortHand": "STA   ,+Y",
    "method": "-y",
    "bytes": 1,
    "cycles": 4,
    "type": "ST",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "Y+1 → Y,\n A → M(Y)"
  },
  {
    "code": "EE",
    "shortHand": "STA   ,-Y",
    "method": "-y",
    "bytes": 1,
    "cycles": 4,
    "type": "ST",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "X–1 → X,\n A → M(X)"
  },
  {
    "code": 30,
    "shortHand": "STX   Adr",
    "method": "ab",
    "bytes": 2,
    "cycles": 3,
    "type": "ST",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "X → M(Adr)"
  },
  {
    "code": 40,
    "shortHand": "STX   n,SP",
    "method": "ns",
    "bytes": 2,
    "cycles": 3,
    "type": "ST",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "X → M(n+SP)"
  },
  {
    "code": 50,
    "shortHand": "STX   n,X",
    "method": "nx",
    "bytes": 2,
    "cycles": 3,
    "type": "ST",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "X → M(n+X)"
  },
  {
    "code": 60,
    "shortHand": "STX   A,X",
    "method": "ax",
    "bytes": 1,
    "cycles": 3,
    "type": "ST",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "X → M(A+X)"
  },
  {
    "code": 70,
    "shortHand": "STX   n,Y",
    "method": "ny",
    "bytes": 2,
    "cycles": 3,
    "type": "ST",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "X → M(n+Y)"
  },
  {
    "code": 80,
    "shortHand": "STX   A,Y",
    "method": "ay",
    "bytes": 1,
    "cycles": 3,
    "type": "ST",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "X → M(A+Y)"
  },
  {
    "code": 31,
    "shortHand": "STY   Adr",
    "method": "ab",
    "bytes": 2,
    "cycles": 3,
    "type": "ST",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "Y → M(Adr)"
  },
  {
    "code": 41,
    "shortHand": "STY   n,SP",
    "method": "ns",
    "bytes": 2,
    "cycles": 3,
    "type": "ST",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "Y → M(n+SP)"
  },
  {
    "code": 51,
    "shortHand": "STY   n,X",
    "method": "nx",
    "bytes": 2,
    "cycles": 3,
    "type": "ST",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "Y → M(n+X)"
  },
  {
    "code": 61,
    "shortHand": "STY   A,X",
    "method": "ax",
    "bytes": 1,
    "cycles": 3,
    "type": "ST",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "Y → M(A+X)"
  },
  {
    "code": 71,
    "shortHand": "STY   n,Y",
    "method": "ny",
    "bytes": 2,
    "cycles": 3,
    "type": "ST",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "Y → M(n+Y)"
  },
  {
    "code": 81,
    "shortHand": "STY   A,Y",
    "method": "ay",
    "bytes": 1,
    "cycles": 3,
    "type": "ST",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "Y → M(A+Y)"
  },
  {
    "code": 32,
    "shortHand": "STSP   Adr",
    "method": "ab",
    "bytes": 2,
    "cycles": 3,
    "type": "ST",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "SP → M(Adr)"
  },
  {
    "code": 42,
    "shortHand": "STSP   n,SP",
    "method": "ns",
    "bytes": 2,
    "cycles": 3,
    "type": "ST",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "SP → M(n+SP)"
  },
  {
    "code": 52,
    "shortHand": "STSP   n,X",
    "method": "nx",
    "bytes": 2,
    "cycles": 3,
    "type": "ST",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "SP → M(n+X)"
  },
  {
    "code": 62,
    "shortHand": "STSP   A,X",
    "method": "ax",
    "bytes": 2,
    "cycles": 3,
    "type": "ST",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "SP → M(A+X)"
  },
  {
    "code": 72,
    "shortHand": "STSP   n,Y",
    "method": "ny",
    "bytes": 2,
    "cycles": 3,
    "type": "ST",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "SP → M(n+Y)"
  },
  {
    "code": 82,
    "shortHand": "STSP   A,Y",
    "method": "ay",
    "bytes": 2,
    "cycles": 3,
    "type": "ST",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "SP → M(A+Y)"
  },
  {
    "code": 94,
    "shortHand": "SUBA   #Data",
    "method": "im",
    "bytes": 2,
    "cycles": 4,
    "type": "SUBA",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "A–Data → A"
  },
  {
    "code": "A4",
    "shortHand": "SUBA   Adr",
    "method": "ab",
    "bytes": 2,
    "cycles": 5,
    "type": "SUBA",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "A–M(Adr) → A"
  },
  {
    "code": "B4",
    "shortHand": "SUBA   n,SP",
    "method": "ns",
    "bytes": 2,
    "cycles": 5,
    "type": "SUBA",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "A – M(n+SP) → A"
  },
  {
    "code": "C4",
    "shortHand": "SUBA   n,X",
    "method": "nx",
    "bytes": 2,
    "cycles": 5,
    "type": "SUBA",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "A – M(n+X) → A"
  },
  {
    "code": "D4",
    "shortHand": "SUBA   n,Y",
    "method": "ny",
    "bytes": 2,
    "cycles": 5,
    "type": "SUBA",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "A – M(n+Y) → A"
  },
  {
    "code": 18,
    "shortHand": "TFR   A,CC",
    "method": "in",
    "bytes": 1,
    "cycles": 2,
    "type": "TFR",
    "n": "d",
    "z": "d",
    "v": "d",
    "c": "d",
    "RTN": "A → CC"
  },
  {
    "code": 19,
    "shortHand": "TFR   CC,A",
    "method": "in",
    "bytes": 1,
    "cycles": 2,
    "type": "TFR",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "CC → A"
  },
  {
    "code": "1A",
    "shortHand": "TFR   X,Y",
    "method": "in",
    "bytes": 1,
    "cycles": 2,
    "type": "TFR",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "X → Y"
  },
  {
    "code": "1B",
    "shortHand": "TFR   Y,X",
    "method": "in",
    "bytes": 1,
    "cycles": 2,
    "type": "TFR",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "Y → X"
  },
  {
    "code": "1C",
    "shortHand": "TFR   X,SP",
    "method": "in",
    "bytes": 1,
    "cycles": 2,
    "type": "TFR",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "X → SP"
  },
  {
    "code": "1D",
    "shortHand": "TFR   SP,X",
    "method": "in",
    "bytes": 1,
    "cycles": 2,
    "type": "TFR",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "SP → X"
  },
  {
    "code": "1E",
    "shortHand": "TFR   Y,SP",
    "method": "in",
    "bytes": 1,
    "cycles": 2,
    "type": "TFR",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "Y → SP"
  },
  {
    "code": "1F",
    "shortHand": "TFR   SP,Y",
    "method": "in",
    "bytes": 1,
    "cycles": 2,
    "type": "TFR",
    "n": "-",
    "z": "-",
    "v": "-",
    "c": "-",
    "RTN": "SP → Y"
  },
  {
    "code": 9,
    "shortHand": "TSTA",
    "method": "in",
    "bytes": 1,
    "cycles": 2,
    "type": "TST",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": 0,
    "RTN": "A–0"
  },
  {
    "code": 39,
    "shortHand": "TST   Adr",
    "method": "ab",
    "bytes": 2,
    "cycles": 3,
    "type": "TST",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": 0,
    "RTN": "M(Adr) – 0"
  },
  {
    "code": 49,
    "shortHand": "TST   n,SP",
    "method": "ns",
    "bytes": 2,
    "cycles": 3,
    "type": "TST",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": 0,
    "RTN": "M(n+SP) – 0"
  },
  {
    "code": 59,
    "shortHand": "TST   n,X",
    "method": "nx",
    "bytes": 2,
    "cycles": 3,
    "type": "TST",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": 0,
    "RTN": "M(n+X) – 0"
  },
  {
    "code": 69,
    "shortHand": "TST   A,X",
    "method": "ax",
    "bytes": 1,
    "cycles": 3,
    "type": "TST",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": 0,
    "RTN": "M(A+X) – 0"
  },
  {
    "code": 79,
    "shortHand": "TST   n,Y",
    "method": "ny",
    "bytes": 2,
    "cycles": 3,
    "type": "TST",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": 0,
    "RTN": "M(n+Y) – 0"
  },
  {
    "code": 89,
    "shortHand": "TST   A,Y",
    "method": "ay",
    "bytes": 1,
    "cycles": 3,
    "type": "TST",
    "n": "d",
    "z": "d",
    "v": 0,
    "c": 0,
    "RTN": "M(A+Y) – 0"
  }
];

export default operations;