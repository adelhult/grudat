[{"C:\\Users\\jxz20\\Documents\\dev\\grudat-info\\grudat\\src\\index.js":"1","C:\\Users\\jxz20\\Documents\\dev\\grudat-info\\grudat\\src\\App.jsx":"2","C:\\Users\\jxz20\\Documents\\dev\\grudat-info\\grudat\\src\\Operations.jsx":"3","C:\\Users\\jxz20\\Documents\\dev\\grudat-info\\grudat\\src\\Tile.jsx":"4","C:\\Users\\jxz20\\Documents\\dev\\grudat-info\\grudat\\src\\operations_data.js":"5","C:\\Users\\jxz20\\Documents\\dev\\grudat-info\\grudat\\src\\getColor.js":"6","C:\\Users\\jxz20\\Documents\\dev\\grudat-info\\grudat\\src\\Frame.jsx":"7","C:\\Users\\jxz20\\Documents\\dev\\grudat-info\\grudat\\src\\types_data.js":"8","C:\\Users\\jxz20\\Documents\\dev\\grudat-info\\grudat\\src\\TypeInfo.jsx":"9","C:\\Users\\jxz20\\Documents\\dev\\grudat-info\\grudat\\src\\Numbers.jsx":"10","C:\\Users\\jxz20\\Documents\\dev\\grudat-info\\grudat\\src\\groups.js":"11","C:\\Users\\jxz20\\Documents\\dev\\grudat-online\\src\\index.js":"12","C:\\Users\\jxz20\\Documents\\dev\\grudat-online\\src\\App.jsx":"13","C:\\Users\\jxz20\\Documents\\dev\\grudat-online\\src\\Frame.jsx":"14","C:\\Users\\jxz20\\Documents\\dev\\grudat-online\\src\\Operations.jsx":"15","C:\\Users\\jxz20\\Documents\\dev\\grudat-online\\src\\operations_data.js":"16","C:\\Users\\jxz20\\Documents\\dev\\grudat-online\\src\\Numbers.jsx":"17","C:\\Users\\jxz20\\Documents\\dev\\grudat-online\\src\\types_data.js":"18","C:\\Users\\jxz20\\Documents\\dev\\grudat-online\\src\\groups.js":"19","C:\\Users\\jxz20\\Documents\\dev\\grudat-online\\src\\TypeInfo.jsx":"20","C:\\Users\\jxz20\\Documents\\dev\\grudat-online\\src\\Tile.jsx":"21","C:\\Users\\jxz20\\Documents\\dev\\grudat-online\\src\\getColor.js":"22","C:\\Users\\jxz20\\Documents\\dev\\grudat-online\\src\\ControlFlow.jsx":"23"},{"size":222,"mtime":1607202460104,"results":"24","hashOfConfig":"25"},{"size":1768,"mtime":1608554321841,"results":"26","hashOfConfig":"25"},{"size":5045,"mtime":1608503514340,"results":"27","hashOfConfig":"25"},{"size":646,"mtime":1607855860672,"results":"28","hashOfConfig":"25"},{"size":59254,"mtime":1608502270774,"results":"29","hashOfConfig":"25"},{"size":288,"mtime":1607704642572,"results":"30","hashOfConfig":"25"},{"size":1426,"mtime":1607467859884,"results":"31","hashOfConfig":"25"},{"size":23344,"mtime":1608502280627,"results":"32","hashOfConfig":"25"},{"size":2385,"mtime":1608420206910,"results":"33","hashOfConfig":"25"},{"size":2204,"mtime":1608503399061,"results":"34","hashOfConfig":"25"},{"size":1290,"mtime":1608503471752,"results":"35","hashOfConfig":"25"},{"size":222,"mtime":1607202460104,"results":"36","hashOfConfig":"37"},{"size":2115,"mtime":1609172832686,"results":"38","hashOfConfig":"37"},{"size":1426,"mtime":1607467859884,"results":"39","hashOfConfig":"37"},{"size":5034,"mtime":1609174951166,"results":"40","hashOfConfig":"37"},{"size":59254,"mtime":1608502270774,"results":"41","hashOfConfig":"37"},{"size":2204,"mtime":1608503399061,"results":"42","hashOfConfig":"37"},{"size":23364,"mtime":1609175850238,"results":"43","hashOfConfig":"37"},{"size":1290,"mtime":1608503471752,"results":"44","hashOfConfig":"37"},{"size":2385,"mtime":1608420206910,"results":"45","hashOfConfig":"37"},{"size":646,"mtime":1607855860672,"results":"46","hashOfConfig":"37"},{"size":288,"mtime":1607704642572,"results":"47","hashOfConfig":"37"},{"size":3359,"mtime":1609175689831,"results":"48","hashOfConfig":"37"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"tp5kxw",{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"51"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"51"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"51"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"r8mgml",{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jxz20\\Documents\\dev\\grudat-info\\grudat\\src\\index.js",[],["99","100"],"C:\\Users\\jxz20\\Documents\\dev\\grudat-info\\grudat\\src\\App.jsx",["101","102","103"],"C:\\Users\\jxz20\\Documents\\dev\\grudat-info\\grudat\\src\\Operations.jsx",["104","105","106","107","108","109","110"],"import { useState } from \"react\";\r\nimport groups from \"./groups.js\";\r\nimport AnchorLink from 'react-anchor-link-smooth-scroll'\r\nimport \"./styles/Operations.css\"\r\nimport Tile from \"./Tile.jsx\";\r\nimport TypeInfo from \"./TypeInfo.jsx\";\r\n\r\nexport default function Operations(props) {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [isMapMode, setMode] = useState(true);\r\n  const [sortingMethod, setSortingMethod] = useState(\"code\");\r\n  const [selected, setSelected] = useState();\r\n\r\n  // generate a tile\r\n  const genTiles = data => {\r\n    if (data.length == 0) {\r\n      return \"Hittar inga operationer som matchar din sÃ¶kning :/\"\r\n    }\r\n\r\n    const sorted = data.sort((a, b) => {\r\n      if (sortingMethod == \"type\") {\r\n        if (a.type == b.type) {\r\n          return Number(`0x${a.code}`, 10) > Number(`0x${b.code}`, 10) ? 1 : -1;\r\n        }\r\n        return a.type > b.type ? 1 : -1;\r\n      } else {\r\n        // sort based on the op code\r\n        return Number(`0x${a.code}`, 10) > Number(`0x${b.code}`, 10) ? 1 : -1;\r\n      }\r\n    });\r\n\r\n    return sorted.map(op => {\r\n      return <AnchorLink offset=\"150\" href=\"#selected\">\r\n        <Tile\r\n          key={op.code + op.shortHand}\r\n          code={op.code}\r\n          method={op.method}\r\n          shortHand={op.shortHand}\r\n          bytes={op.bytes}\r\n          cycles={op.cycles}\r\n          type={op.type}\r\n          select={setSelected}\r\n        />\r\n      </AnchorLink>\r\n    });\r\n  };\r\n\r\n  const genTypeInfo = type => {\r\n    const data = props.types.find(t => t.type === type);\r\n    const operations = props.operations.filter(op => op.type === type);\r\n    return data ? (\r\n      <TypeInfo\r\n        type={data.type}\r\n        name={data.name}\r\n        flagInfo={data.flagInfo}\r\n        operations={operations}\r\n        description={data.description}\r\n      />\r\n    ) : \"Error: no additional data found\";\r\n  };\r\n\r\n  // used in the group view to \r\n  // search for a specific op\r\n  const GroupItem = props => {\r\n    return (\r\n      <AnchorLink\r\n        className=\"groupItem\"\r\n        href=\"#top\"\r\n        onClick={() => {\r\n          const selected = props.label.split(\" \")[0];\r\n          setQuery(selected);\r\n          setMode(true); // switch to map mode\r\n        }\r\n        }>\r\n        {props.label.replace(\"^\", \"\")}\r\n      </AnchorLink>);\r\n  };\r\n\r\n  const genGroups = groups => {\r\n    return Object.keys(groups).map(group => {\r\n      const items = groups[group].map(i => {\r\n        return <GroupItem key={i} label={i} />\r\n      });\r\n\r\n      return <>\r\n        <h3>{group}</h3>\r\n        <div className=\"group\">{items}</div>\r\n      </>;\r\n    });\r\n  };\r\n\r\n  // filter out operations that does not match the query\r\n  const matchesQuery = ops => {\r\n    return ops.filter(op => {\r\n      try {\r\n        return ((op.shortHand.toUpperCase().search(query) >= 0) ||\r\n          (op.type.toUpperCase().search(query) >= 0) ||\r\n          (op.code.toString().toUpperCase().search(query) >= 0));\r\n      } catch (err) {\r\n        // if the regex breaks:\r\n        setQuery(query.slice(0, -1));\r\n        return true;\r\n      }\r\n\r\n    });\r\n  };\r\n\r\n  let tiles = genTiles(matchesQuery(props.operations));\r\n\r\n  return props.operations && <>\r\n    <div id=\"top\"></div>\r\n    <div className=\"Operations\">\r\n      <nav>\r\n        <input\r\n          type=\"search\"\r\n          value={query}\r\n          onChange={e => setQuery(e.target.value.toUpperCase())} />\r\n\r\n        <AnchorLink\r\n          href=\"#top\"\r\n          className=\"switch\"\r\n          onClick={() => {\r\n            setMode(!isMapMode);\r\n            setSelected(\"\");\r\n          }}\r\n        >\r\n          {\r\n            isMapMode ?\r\n              <>\r\n                Visa kategorier\r\n                  <img src=\"category.svg\" />\r\n              </>\r\n              :\r\n              <>\r\n                Visa karta\r\n                <img src=\"explore.svg\" />\r\n              </>\r\n          }\r\n        </AnchorLink>\r\n\r\n        {\r\n          isMapMode &&\r\n          <div className=\"sortingMethod\">\r\n            <button\r\n              className={sortingMethod == \"code\" ? \"active\" : \"\"}\r\n              onClick={() => setSortingMethod(\"code\")}\r\n            >\r\n              Sortera efter kod\r\n              </button>\r\n\r\n            <button\r\n              onClick={() => setSortingMethod(\"type\")}\r\n              className={sortingMethod == \"type\" ? \"active\" : \"\"}\r\n            >\r\n              Sortera efter namn\r\n              </button>\r\n            {selected && (\r\n              <button\r\n                className=\"remove\"\r\n                onClick={() => setSelected(\"\")}>\r\n                Avmarkera operationen\r\n              </button>\r\n            )}\r\n          </div>\r\n        }\r\n      </nav>\r\n\r\n      <article className=\"selected\" id=\"selected\">\r\n        {\r\n          selected ? <>\r\n            {genTypeInfo(selected)}\r\n          </>\r\n            : ''\r\n        }\r\n      </article>\r\n\r\n      { isMapMode ?\r\n        <div className=\"map\"> {tiles} </div>\r\n        :\r\n        <div className=\"groups\">\r\n          {genGroups(groups)}\r\n        </div>\r\n      }\r\n    </div>\r\n  </>;\r\n}","C:\\Users\\jxz20\\Documents\\dev\\grudat-info\\grudat\\src\\Tile.jsx",[],"C:\\Users\\jxz20\\Documents\\dev\\grudat-info\\grudat\\src\\operations_data.js",[],"C:\\Users\\jxz20\\Documents\\dev\\grudat-info\\grudat\\src\\getColor.js",[],"C:\\Users\\jxz20\\Documents\\dev\\grudat-info\\grudat\\src\\Frame.jsx",["111","112"],"import { useState } from \"react\";\r\nimport \"./styles/Frame.css\";\r\n\r\nexport default function Frame(props) {\r\n    const [focused, setFocus] = useState(false);\r\n    const [showingAdditional, setShowingAdditional] = useState(false);\r\n    return <div \r\n            className=\"Frame\"\r\n            style={focused ? {maxWidth:\"100%\"} : {maxWidth:\"60%\"}}\r\n            >\r\n\r\n            { props.src ? <img src={props.src} onClick={() => setFocus(!focused)} /> : \"\"}\r\n            {\r\n                props.additional ? (\r\n                    !showingAdditional ?\r\n                        <div\r\n                            className=\"additional\"\r\n                            onClick={() => { setFocus(true); setShowingAdditional(!showingAdditional)}}\r\n                        >\r\n                            Visa ytterligare info â\r\n                        </div>\r\n                    :\r\n                        <>\r\n                            <img src={props.additional} />\r\n                            <div\r\n                                className=\"additional\"\r\n                                onClick={() => { setFocus(false); setShowingAdditional(!showingAdditional)}}\r\n                            >\r\n                                DÃ¶lj extra-informationen â\r\n                            </div>\r\n                        </>\r\n                )\r\n                   \r\n                : ''\r\n            }\r\n            \r\n    </div> \r\n}","C:\\Users\\jxz20\\Documents\\dev\\grudat-info\\grudat\\src\\types_data.js",[],"C:\\Users\\jxz20\\Documents\\dev\\grudat-info\\grudat\\src\\TypeInfo.jsx",[],"C:\\Users\\jxz20\\Documents\\dev\\grudat-info\\grudat\\src\\Numbers.jsx",["113","114"],"import \"./styles/Numbers.css\";\r\nimport {useState} from \"react\";\r\n\r\nexport default function Numbers() {\r\n    const [num, setNum] = useState(NaN);\r\n    const [comp, setComp] = useState(false);\r\n\r\n    const write = (e, base) => {\r\n        let newNum = parseInt(e.target.value, base);\r\n        if (newNum > 255 && comp) {\r\n            return;\r\n        }\r\n\r\n        if (base == 10 && comp && newNum < 0) {\r\n            setNum(newNum + 256);\r\n        } else {\r\n            setNum(newNum);\r\n        }\r\n    }\r\n    \r\n\r\n    const read = base => {\r\n        if (!isNaN(num)) {\r\n            let newNum = num.toString(base);\r\n            if (comp && base == 10 && newNum > 127) {\r\n                return newNum - 256;\r\n            } else {\r\n                return newNum;\r\n            }\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    return <div className=\"Numbers\">\r\n        <button\r\n            className={comp ? \"active\" : \"\"}\r\n            onClick={() => setComp(!comp)}>\r\n            { comp ?\r\n                <span>tvÃ¥komplementsform Ã¤r pÃ¥</span>\r\n                : \r\n                <span>tvÃ¥komplementsform Ã¤r avstÃ¤ngt</span>\r\n            }\r\n        </button>\r\n\r\n        <div className=\"flexContainer\">\r\n            <div className=\"input\">\r\n                <span className=\"legend\">Dec</span>\r\n                <input value={read(10)} type=\"text\" onChange={e => write(e, 10)}/>\r\n            </div>\r\n            <div className=\"input\">\r\n                <span className=\"legend\">Hex</span>    \r\n                <input value={read(16).toUpperCase()} onChange={e => write(e, 16)} type=\"text\"/>\r\n            </div>\r\n            <div className=\"input\">\r\n                <span className=\"legend\">Bin</span>                \r\n                <input value={read(2)} onChange={e => write(e, 2)} type=\"text\"/>\r\n            </div>\r\n        </div>\r\n        <p>\r\n            Kommentar: tvÃ¥komplementsformen utgÃ¥r frÃ¥n att talet Ã¤r 8-bitar.\r\n            Inmatningen Ã¤r lite wanky i stÃ¶rsta allmÃ¤nhet med, men om man promt\r\n            vill konvertera mÃ¥nga tal mellan olika baser kan man anvÃ¤nda typ\r\n            Mathematica eller nÃ¥gon annan konverterare online.\r\n        </p>\r\n    </div>\r\n}","C:\\Users\\jxz20\\Documents\\dev\\grudat-info\\grudat\\src\\groups.js",[],"C:\\Users\\jxz20\\Documents\\dev\\grudat-online\\src\\index.js",[],"C:\\Users\\jxz20\\Documents\\dev\\grudat-online\\src\\App.jsx",["115","116"],"C:\\Users\\jxz20\\Documents\\dev\\grudat-online\\src\\Frame.jsx",["117","118"],"C:\\Users\\jxz20\\Documents\\dev\\grudat-online\\src\\Operations.jsx",["119","120","121","122","123","124","125"],"C:\\Users\\jxz20\\Documents\\dev\\grudat-online\\src\\operations_data.js",[],"C:\\Users\\jxz20\\Documents\\dev\\grudat-online\\src\\Numbers.jsx",["126","127"],"C:\\Users\\jxz20\\Documents\\dev\\grudat-online\\src\\types_data.js",[],"C:\\Users\\jxz20\\Documents\\dev\\grudat-online\\src\\groups.js",[],"C:\\Users\\jxz20\\Documents\\dev\\grudat-online\\src\\TypeInfo.jsx",[],"C:\\Users\\jxz20\\Documents\\dev\\grudat-online\\src\\Tile.jsx",[],"C:\\Users\\jxz20\\Documents\\dev\\grudat-online\\src\\getColor.js",[],"C:\\Users\\jxz20\\Documents\\dev\\grudat-online\\src\\ControlFlow.jsx",[],{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":12,"column":9,"nodeType":"134","endLine":12,"endColumn":55},{"ruleId":"132","severity":1,"message":"133","line":48,"column":9,"nodeType":"134","endLine":48,"endColumn":32},{"ruleId":"135","severity":1,"message":"136","line":49,"column":124,"nodeType":"134","endLine":49,"endColumn":135},{"ruleId":"137","severity":1,"message":"138","line":16,"column":21,"nodeType":"139","messageId":"140","endLine":16,"endColumn":23},{"ruleId":"137","severity":1,"message":"138","line":21,"column":25,"nodeType":"139","messageId":"140","endLine":21,"endColumn":27},{"ruleId":"137","severity":1,"message":"138","line":22,"column":20,"nodeType":"139","messageId":"140","endLine":22,"endColumn":22},{"ruleId":"132","severity":1,"message":"133","line":131,"column":19,"nodeType":"134","endLine":131,"endColumn":45},{"ruleId":"132","severity":1,"message":"133","line":136,"column":17,"nodeType":"134","endLine":136,"endColumn":42},{"ruleId":"137","severity":1,"message":"138","line":145,"column":40,"nodeType":"139","messageId":"140","endLine":145,"endColumn":42},{"ruleId":"137","severity":1,"message":"138","line":153,"column":40,"nodeType":"139","messageId":"140","endLine":153,"endColumn":42},{"ruleId":"132","severity":1,"message":"133","line":12,"column":27,"nodeType":"134","endLine":12,"endColumn":85},{"ruleId":"132","severity":1,"message":"133","line":24,"column":29,"nodeType":"134","endLine":24,"endColumn":59},{"ruleId":"137","severity":1,"message":"138","line":14,"column":18,"nodeType":"139","messageId":"140","endLine":14,"endColumn":20},{"ruleId":"137","severity":1,"message":"138","line":25,"column":30,"nodeType":"139","messageId":"140","endLine":25,"endColumn":32},{"ruleId":"132","severity":1,"message":"133","line":16,"column":9,"nodeType":"134","endLine":16,"endColumn":55},{"ruleId":"132","severity":1,"message":"133","line":60,"column":9,"nodeType":"134","endLine":60,"endColumn":32},{"ruleId":"132","severity":1,"message":"133","line":12,"column":27,"nodeType":"134","endLine":12,"endColumn":85},{"ruleId":"132","severity":1,"message":"133","line":24,"column":29,"nodeType":"134","endLine":24,"endColumn":59},{"ruleId":"137","severity":1,"message":"138","line":15,"column":21,"nodeType":"139","messageId":"140","endLine":15,"endColumn":23},{"ruleId":"137","severity":1,"message":"138","line":20,"column":25,"nodeType":"139","messageId":"140","endLine":20,"endColumn":27},{"ruleId":"137","severity":1,"message":"138","line":21,"column":20,"nodeType":"139","messageId":"140","endLine":21,"endColumn":22},{"ruleId":"132","severity":1,"message":"133","line":130,"column":19,"nodeType":"134","endLine":130,"endColumn":45},{"ruleId":"132","severity":1,"message":"133","line":135,"column":17,"nodeType":"134","endLine":135,"endColumn":42},{"ruleId":"137","severity":1,"message":"138","line":144,"column":40,"nodeType":"139","messageId":"140","endLine":144,"endColumn":42},{"ruleId":"137","severity":1,"message":"138","line":152,"column":40,"nodeType":"139","messageId":"140","endLine":152,"endColumn":42},{"ruleId":"137","severity":1,"message":"138","line":14,"column":18,"nodeType":"139","messageId":"140","endLine":14,"endColumn":20},{"ruleId":"137","severity":1,"message":"138","line":25,"column":30,"nodeType":"139","messageId":"140","endLine":25,"endColumn":32},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]